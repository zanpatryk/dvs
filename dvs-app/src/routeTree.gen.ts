/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/_index'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as IndexContactImport } from './routes/_index/contact'
import { Route as IndexAboutImport } from './routes/_index/about'
import { Route as AuthenticatedDashboardImport } from './routes/_authenticated/_dashboard'
import { Route as AuthenticatedDashboardDashboardTicketsImport } from './routes/_authenticated/_dashboard/dashboard/tickets'
import { Route as AuthenticatedDashboardDashboardPollsImport } from './routes/_authenticated/_dashboard/dashboard/polls'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexRoute,
} as any)

const IndexContactRoute = IndexContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => IndexRoute,
} as any)

const IndexAboutRoute = IndexAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => IndexRoute,
} as any)

const AuthenticatedDashboardRoute = AuthenticatedDashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardDashboardTicketsRoute =
  AuthenticatedDashboardDashboardTicketsImport.update({
    id: '/dashboard/tickets',
    path: '/dashboard/tickets',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardPollsRoute =
  AuthenticatedDashboardDashboardPollsImport.update({
    id: '/dashboard/polls',
    path: '/dashboard/polls',
    getParentRoute: () => AuthenticatedDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_index/about': {
      id: '/_index/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof IndexAboutImport
      parentRoute: typeof IndexImport
    }
    '/_index/contact': {
      id: '/_index/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof IndexContactImport
      parentRoute: typeof IndexImport
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof IndexImport
    }
    '/_authenticated/_dashboard/dashboard/polls': {
      id: '/_authenticated/_dashboard/dashboard/polls'
      path: '/dashboard/polls'
      fullPath: '/dashboard/polls'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardPollsImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
    '/_authenticated/_dashboard/dashboard/tickets': {
      id: '/_authenticated/_dashboard/dashboard/tickets'
      path: '/dashboard/tickets'
      fullPath: '/dashboard/tickets'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardTicketsImport
      parentRoute: typeof AuthenticatedDashboardImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardRouteChildren {
  AuthenticatedDashboardDashboardPollsRoute: typeof AuthenticatedDashboardDashboardPollsRoute
  AuthenticatedDashboardDashboardTicketsRoute: typeof AuthenticatedDashboardDashboardTicketsRoute
}

const AuthenticatedDashboardRouteChildren: AuthenticatedDashboardRouteChildren =
  {
    AuthenticatedDashboardDashboardPollsRoute:
      AuthenticatedDashboardDashboardPollsRoute,
    AuthenticatedDashboardDashboardTicketsRoute:
      AuthenticatedDashboardDashboardTicketsRoute,
  }

const AuthenticatedDashboardRouteWithChildren =
  AuthenticatedDashboardRoute._addFileChildren(
    AuthenticatedDashboardRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRoute: AuthenticatedDashboardRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface IndexRouteChildren {
  IndexAboutRoute: typeof IndexAboutRoute
  IndexContactRoute: typeof IndexContactRoute
  IndexIndexRoute: typeof IndexIndexRoute
}

const IndexRouteChildren: IndexRouteChildren = {
  IndexAboutRoute: IndexAboutRoute,
  IndexContactRoute: IndexContactRoute,
  IndexIndexRoute: IndexIndexRoute,
}

const IndexRouteWithChildren = IndexRoute._addFileChildren(IndexRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedDashboardRouteWithChildren
  '/about': typeof IndexAboutRoute
  '/contact': typeof IndexContactRoute
  '/': typeof IndexIndexRoute
  '/dashboard/polls': typeof AuthenticatedDashboardDashboardPollsRoute
  '/dashboard/tickets': typeof AuthenticatedDashboardDashboardTicketsRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedDashboardRouteWithChildren
  '/about': typeof IndexAboutRoute
  '/contact': typeof IndexContactRoute
  '/': typeof IndexIndexRoute
  '/dashboard/polls': typeof AuthenticatedDashboardDashboardPollsRoute
  '/dashboard/tickets': typeof AuthenticatedDashboardDashboardTicketsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_index': typeof IndexRouteWithChildren
  '/_authenticated/_dashboard': typeof AuthenticatedDashboardRouteWithChildren
  '/_index/about': typeof IndexAboutRoute
  '/_index/contact': typeof IndexContactRoute
  '/_index/': typeof IndexIndexRoute
  '/_authenticated/_dashboard/dashboard/polls': typeof AuthenticatedDashboardDashboardPollsRoute
  '/_authenticated/_dashboard/dashboard/tickets': typeof AuthenticatedDashboardDashboardTicketsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/contact'
    | '/'
    | '/dashboard/polls'
    | '/dashboard/tickets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/about'
    | '/contact'
    | '/'
    | '/dashboard/polls'
    | '/dashboard/tickets'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_index'
    | '/_authenticated/_dashboard'
    | '/_index/about'
    | '/_index/contact'
    | '/_index/'
    | '/_authenticated/_dashboard/dashboard/polls'
    | '/_authenticated/_dashboard/dashboard/tickets'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  IndexRoute: typeof IndexRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  IndexRoute: IndexRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_index"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_dashboard"
      ]
    },
    "/_index": {
      "filePath": "_index.tsx",
      "children": [
        "/_index/about",
        "/_index/contact",
        "/_index/"
      ]
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboard/dashboard/polls",
        "/_authenticated/_dashboard/dashboard/tickets"
      ]
    },
    "/_index/about": {
      "filePath": "_index/about.tsx",
      "parent": "/_index"
    },
    "/_index/contact": {
      "filePath": "_index/contact.tsx",
      "parent": "/_index"
    },
    "/_index/": {
      "filePath": "_index/index.tsx",
      "parent": "/_index"
    },
    "/_authenticated/_dashboard/dashboard/polls": {
      "filePath": "_authenticated/_dashboard/dashboard/polls.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/dashboard/tickets": {
      "filePath": "_authenticated/_dashboard/dashboard/tickets.tsx",
      "parent": "/_authenticated/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
