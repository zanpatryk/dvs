/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexRouteImport } from './routes/_index/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexIndexImport } from './routes/_index/index'
import { Route as IndexContactImport } from './routes/_index/contact'
import { Route as IndexAboutImport } from './routes/_index/about'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/_dashboard/route'
import { Route as AuthenticatedDashboardDashboardIndexImport } from './routes/_authenticated/_dashboard/dashboard/index'
import { Route as AuthenticatedDashboardDashboardNotForAdminRouteImport } from './routes/_authenticated/_dashboard/dashboard/_not-for-admin/route'
import { Route as AuthenticatedDashboardDashboardManagerOnlyRouteImport } from './routes/_authenticated/_dashboard/dashboard/_manager-only/route'
import { Route as AuthenticatedDashboardDashboardAdminOnlyRouteImport } from './routes/_authenticated/_dashboard/dashboard/_admin-only/route'
import { Route as AuthenticatedDashboardDashboardNotForAdminTicketsImport } from './routes/_authenticated/_dashboard/dashboard/_not-for-admin/tickets'
import { Route as AuthenticatedDashboardDashboardNotForAdminPollsImport } from './routes/_authenticated/_dashboard/dashboard/_not-for-admin/polls'
import { Route as AuthenticatedDashboardDashboardManagerOnlyManagePollsImport } from './routes/_authenticated/_dashboard/dashboard/_manager-only/manage-polls'
import { Route as AuthenticatedDashboardDashboardAdminOnlyManageUsersImport } from './routes/_authenticated/_dashboard/dashboard/_admin-only/manage-users'
import { Route as AuthenticatedDashboardDashboardAdminOnlyManageTicketsImport } from './routes/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets'

// Create Virtual Routes

const AuthenticatedDashboardDashboardImport = createFileRoute(
  '/_authenticated/_dashboard/dashboard',
)()

// Create/Update Routes

const IndexRouteRoute = IndexRouteImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexIndexRoute = IndexIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexContactRoute = IndexContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => IndexRouteRoute,
} as any)

const IndexAboutRoute = IndexAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => IndexRouteRoute,
} as any)

const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteImport.update({
    id: '/_dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardRoute =
  AuthenticatedDashboardDashboardImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardIndexRoute =
  AuthenticatedDashboardDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardNotForAdminRouteRoute =
  AuthenticatedDashboardDashboardNotForAdminRouteImport.update({
    id: '/_not-for-admin',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardManagerOnlyRouteRoute =
  AuthenticatedDashboardDashboardManagerOnlyRouteImport.update({
    id: '/_manager-only',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardAdminOnlyRouteRoute =
  AuthenticatedDashboardDashboardAdminOnlyRouteImport.update({
    id: '/_admin-only',
    getParentRoute: () => AuthenticatedDashboardDashboardRoute,
  } as any)

const AuthenticatedDashboardDashboardNotForAdminTicketsRoute =
  AuthenticatedDashboardDashboardNotForAdminTicketsImport.update({
    id: '/tickets',
    path: '/tickets',
    getParentRoute: () => AuthenticatedDashboardDashboardNotForAdminRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardNotForAdminPollsRoute =
  AuthenticatedDashboardDashboardNotForAdminPollsImport.update({
    id: '/polls',
    path: '/polls',
    getParentRoute: () => AuthenticatedDashboardDashboardNotForAdminRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute =
  AuthenticatedDashboardDashboardManagerOnlyManagePollsImport.update({
    id: '/manage-polls',
    path: '/manage-polls',
    getParentRoute: () => AuthenticatedDashboardDashboardManagerOnlyRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute =
  AuthenticatedDashboardDashboardAdminOnlyManageUsersImport.update({
    id: '/manage-users',
    path: '/manage-users',
    getParentRoute: () => AuthenticatedDashboardDashboardAdminOnlyRouteRoute,
  } as any)

const AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute =
  AuthenticatedDashboardDashboardAdminOnlyManageTicketsImport.update({
    id: '/manage-tickets',
    path: '/manage-tickets',
    getParentRoute: () => AuthenticatedDashboardDashboardAdminOnlyRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_index/about': {
      id: '/_index/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof IndexAboutImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/contact': {
      id: '/_index/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof IndexContactImport
      parentRoute: typeof IndexRouteImport
    }
    '/_index/': {
      id: '/_index/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexIndexImport
      parentRoute: typeof IndexRouteImport
    }
    '/_authenticated/_dashboard/dashboard': {
      id: '/_authenticated/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/dashboard/_admin-only': {
      id: '/_authenticated/_dashboard/dashboard/_admin-only'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardAdminOnlyRouteImport
      parentRoute: typeof AuthenticatedDashboardDashboardRoute
    }
    '/_authenticated/_dashboard/dashboard/_manager-only': {
      id: '/_authenticated/_dashboard/dashboard/_manager-only'
      path: ''
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardManagerOnlyRouteImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/_dashboard/dashboard/_not-for-admin': {
      id: '/_authenticated/_dashboard/dashboard/_not-for-admin'
      path: ''
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardNotForAdminRouteImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/_dashboard/dashboard/': {
      id: '/_authenticated/_dashboard/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardDashboardImport
    }
    '/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets': {
      id: '/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets'
      path: '/manage-tickets'
      fullPath: '/dashboard/manage-tickets'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardAdminOnlyManageTicketsImport
      parentRoute: typeof AuthenticatedDashboardDashboardAdminOnlyRouteImport
    }
    '/_authenticated/_dashboard/dashboard/_admin-only/manage-users': {
      id: '/_authenticated/_dashboard/dashboard/_admin-only/manage-users'
      path: '/manage-users'
      fullPath: '/dashboard/manage-users'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardAdminOnlyManageUsersImport
      parentRoute: typeof AuthenticatedDashboardDashboardAdminOnlyRouteImport
    }
    '/_authenticated/_dashboard/dashboard/_manager-only/manage-polls': {
      id: '/_authenticated/_dashboard/dashboard/_manager-only/manage-polls'
      path: '/manage-polls'
      fullPath: '/dashboard/manage-polls'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardManagerOnlyManagePollsImport
      parentRoute: typeof AuthenticatedDashboardDashboardManagerOnlyRouteImport
    }
    '/_authenticated/_dashboard/dashboard/_not-for-admin/polls': {
      id: '/_authenticated/_dashboard/dashboard/_not-for-admin/polls'
      path: '/polls'
      fullPath: '/dashboard/polls'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardNotForAdminPollsImport
      parentRoute: typeof AuthenticatedDashboardDashboardNotForAdminRouteImport
    }
    '/_authenticated/_dashboard/dashboard/_not-for-admin/tickets': {
      id: '/_authenticated/_dashboard/dashboard/_not-for-admin/tickets'
      path: '/tickets'
      fullPath: '/dashboard/tickets'
      preLoaderRoute: typeof AuthenticatedDashboardDashboardNotForAdminTicketsImport
      parentRoute: typeof AuthenticatedDashboardDashboardNotForAdminRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardDashboardAdminOnlyRouteRouteChildren {
  AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute: typeof AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute
  AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute: typeof AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute
}

const AuthenticatedDashboardDashboardAdminOnlyRouteRouteChildren: AuthenticatedDashboardDashboardAdminOnlyRouteRouteChildren =
  {
    AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute:
      AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute,
    AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute:
      AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute,
  }

const AuthenticatedDashboardDashboardAdminOnlyRouteRouteWithChildren =
  AuthenticatedDashboardDashboardAdminOnlyRouteRoute._addFileChildren(
    AuthenticatedDashboardDashboardAdminOnlyRouteRouteChildren,
  )

interface AuthenticatedDashboardDashboardManagerOnlyRouteRouteChildren {
  AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute: typeof AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute
}

const AuthenticatedDashboardDashboardManagerOnlyRouteRouteChildren: AuthenticatedDashboardDashboardManagerOnlyRouteRouteChildren =
  {
    AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute:
      AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute,
  }

const AuthenticatedDashboardDashboardManagerOnlyRouteRouteWithChildren =
  AuthenticatedDashboardDashboardManagerOnlyRouteRoute._addFileChildren(
    AuthenticatedDashboardDashboardManagerOnlyRouteRouteChildren,
  )

interface AuthenticatedDashboardDashboardNotForAdminRouteRouteChildren {
  AuthenticatedDashboardDashboardNotForAdminPollsRoute: typeof AuthenticatedDashboardDashboardNotForAdminPollsRoute
  AuthenticatedDashboardDashboardNotForAdminTicketsRoute: typeof AuthenticatedDashboardDashboardNotForAdminTicketsRoute
}

const AuthenticatedDashboardDashboardNotForAdminRouteRouteChildren: AuthenticatedDashboardDashboardNotForAdminRouteRouteChildren =
  {
    AuthenticatedDashboardDashboardNotForAdminPollsRoute:
      AuthenticatedDashboardDashboardNotForAdminPollsRoute,
    AuthenticatedDashboardDashboardNotForAdminTicketsRoute:
      AuthenticatedDashboardDashboardNotForAdminTicketsRoute,
  }

const AuthenticatedDashboardDashboardNotForAdminRouteRouteWithChildren =
  AuthenticatedDashboardDashboardNotForAdminRouteRoute._addFileChildren(
    AuthenticatedDashboardDashboardNotForAdminRouteRouteChildren,
  )

interface AuthenticatedDashboardDashboardRouteChildren {
  AuthenticatedDashboardDashboardAdminOnlyRouteRoute: typeof AuthenticatedDashboardDashboardAdminOnlyRouteRouteWithChildren
  AuthenticatedDashboardDashboardManagerOnlyRouteRoute: typeof AuthenticatedDashboardDashboardManagerOnlyRouteRouteWithChildren
  AuthenticatedDashboardDashboardNotForAdminRouteRoute: typeof AuthenticatedDashboardDashboardNotForAdminRouteRouteWithChildren
  AuthenticatedDashboardDashboardIndexRoute: typeof AuthenticatedDashboardDashboardIndexRoute
}

const AuthenticatedDashboardDashboardRouteChildren: AuthenticatedDashboardDashboardRouteChildren =
  {
    AuthenticatedDashboardDashboardAdminOnlyRouteRoute:
      AuthenticatedDashboardDashboardAdminOnlyRouteRouteWithChildren,
    AuthenticatedDashboardDashboardManagerOnlyRouteRoute:
      AuthenticatedDashboardDashboardManagerOnlyRouteRouteWithChildren,
    AuthenticatedDashboardDashboardNotForAdminRouteRoute:
      AuthenticatedDashboardDashboardNotForAdminRouteRouteWithChildren,
    AuthenticatedDashboardDashboardIndexRoute:
      AuthenticatedDashboardDashboardIndexRoute,
  }

const AuthenticatedDashboardDashboardRouteWithChildren =
  AuthenticatedDashboardDashboardRoute._addFileChildren(
    AuthenticatedDashboardDashboardRouteChildren,
  )

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardDashboardRoute: typeof AuthenticatedDashboardDashboardRouteWithChildren
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardDashboardRoute:
      AuthenticatedDashboardDashboardRouteWithChildren,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface IndexRouteRouteChildren {
  IndexAboutRoute: typeof IndexAboutRoute
  IndexContactRoute: typeof IndexContactRoute
  IndexIndexRoute: typeof IndexIndexRoute
}

const IndexRouteRouteChildren: IndexRouteRouteChildren = {
  IndexAboutRoute: IndexAboutRoute,
  IndexContactRoute: IndexContactRoute,
  IndexIndexRoute: IndexIndexRoute,
}

const IndexRouteRouteWithChildren = IndexRouteRoute._addFileChildren(
  IndexRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/about': typeof IndexAboutRoute
  '/contact': typeof IndexContactRoute
  '/': typeof IndexIndexRoute
  '/dashboard': typeof AuthenticatedDashboardDashboardNotForAdminRouteRouteWithChildren
  '/dashboard/': typeof AuthenticatedDashboardDashboardIndexRoute
  '/dashboard/manage-tickets': typeof AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute
  '/dashboard/manage-users': typeof AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute
  '/dashboard/manage-polls': typeof AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute
  '/dashboard/polls': typeof AuthenticatedDashboardDashboardNotForAdminPollsRoute
  '/dashboard/tickets': typeof AuthenticatedDashboardDashboardNotForAdminTicketsRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/about': typeof IndexAboutRoute
  '/contact': typeof IndexContactRoute
  '/': typeof IndexIndexRoute
  '/dashboard': typeof AuthenticatedDashboardDashboardIndexRoute
  '/dashboard/manage-tickets': typeof AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute
  '/dashboard/manage-users': typeof AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute
  '/dashboard/manage-polls': typeof AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute
  '/dashboard/polls': typeof AuthenticatedDashboardDashboardNotForAdminPollsRoute
  '/dashboard/tickets': typeof AuthenticatedDashboardDashboardNotForAdminTicketsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_index': typeof IndexRouteRouteWithChildren
  '/_authenticated/_dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_index/about': typeof IndexAboutRoute
  '/_index/contact': typeof IndexContactRoute
  '/_index/': typeof IndexIndexRoute
  '/_authenticated/_dashboard/dashboard': typeof AuthenticatedDashboardDashboardRouteWithChildren
  '/_authenticated/_dashboard/dashboard/_admin-only': typeof AuthenticatedDashboardDashboardAdminOnlyRouteRouteWithChildren
  '/_authenticated/_dashboard/dashboard/_manager-only': typeof AuthenticatedDashboardDashboardManagerOnlyRouteRouteWithChildren
  '/_authenticated/_dashboard/dashboard/_not-for-admin': typeof AuthenticatedDashboardDashboardNotForAdminRouteRouteWithChildren
  '/_authenticated/_dashboard/dashboard/': typeof AuthenticatedDashboardDashboardIndexRoute
  '/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets': typeof AuthenticatedDashboardDashboardAdminOnlyManageTicketsRoute
  '/_authenticated/_dashboard/dashboard/_admin-only/manage-users': typeof AuthenticatedDashboardDashboardAdminOnlyManageUsersRoute
  '/_authenticated/_dashboard/dashboard/_manager-only/manage-polls': typeof AuthenticatedDashboardDashboardManagerOnlyManagePollsRoute
  '/_authenticated/_dashboard/dashboard/_not-for-admin/polls': typeof AuthenticatedDashboardDashboardNotForAdminPollsRoute
  '/_authenticated/_dashboard/dashboard/_not-for-admin/tickets': typeof AuthenticatedDashboardDashboardNotForAdminTicketsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/about'
    | '/contact'
    | '/'
    | '/dashboard'
    | '/dashboard/'
    | '/dashboard/manage-tickets'
    | '/dashboard/manage-users'
    | '/dashboard/manage-polls'
    | '/dashboard/polls'
    | '/dashboard/tickets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/about'
    | '/contact'
    | '/'
    | '/dashboard'
    | '/dashboard/manage-tickets'
    | '/dashboard/manage-users'
    | '/dashboard/manage-polls'
    | '/dashboard/polls'
    | '/dashboard/tickets'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_index'
    | '/_authenticated/_dashboard'
    | '/_index/about'
    | '/_index/contact'
    | '/_index/'
    | '/_authenticated/_dashboard/dashboard'
    | '/_authenticated/_dashboard/dashboard/_admin-only'
    | '/_authenticated/_dashboard/dashboard/_manager-only'
    | '/_authenticated/_dashboard/dashboard/_not-for-admin'
    | '/_authenticated/_dashboard/dashboard/'
    | '/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets'
    | '/_authenticated/_dashboard/dashboard/_admin-only/manage-users'
    | '/_authenticated/_dashboard/dashboard/_manager-only/manage-polls'
    | '/_authenticated/_dashboard/dashboard/_not-for-admin/polls'
    | '/_authenticated/_dashboard/dashboard/_not-for-admin/tickets'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  IndexRouteRoute: typeof IndexRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  IndexRouteRoute: IndexRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_index"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/_dashboard"
      ]
    },
    "/_index": {
      "filePath": "_index/route.tsx",
      "children": [
        "/_index/about",
        "/_index/contact",
        "/_index/"
      ]
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_dashboard/dashboard"
      ]
    },
    "/_index/about": {
      "filePath": "_index/about.tsx",
      "parent": "/_index"
    },
    "/_index/contact": {
      "filePath": "_index/contact.tsx",
      "parent": "/_index"
    },
    "/_index/": {
      "filePath": "_index/index.tsx",
      "parent": "/_index"
    },
    "/_authenticated/_dashboard/dashboard": {
      "filePath": "_authenticated/_dashboard/dashboard/_admin-only",
      "parent": "/_authenticated/_dashboard",
      "children": [
        "/_authenticated/_dashboard/dashboard/_admin-only",
        "/_authenticated/_dashboard/dashboard/_manager-only",
        "/_authenticated/_dashboard/dashboard/_not-for-admin",
        "/_authenticated/_dashboard/dashboard/"
      ]
    },
    "/_authenticated/_dashboard/dashboard/_admin-only": {
      "filePath": "_authenticated/_dashboard/dashboard/_admin-only/route.tsx",
      "parent": "/_authenticated/_dashboard/dashboard",
      "children": [
        "/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets",
        "/_authenticated/_dashboard/dashboard/_admin-only/manage-users"
      ]
    },
    "/_authenticated/_dashboard/dashboard/_manager-only": {
      "filePath": "_authenticated/_dashboard/dashboard/_manager-only/route.tsx",
      "parent": "/_authenticated/_dashboard/dashboard",
      "children": [
        "/_authenticated/_dashboard/dashboard/_manager-only/manage-polls"
      ]
    },
    "/_authenticated/_dashboard/dashboard/_not-for-admin": {
      "filePath": "_authenticated/_dashboard/dashboard/_not-for-admin/route.tsx",
      "parent": "/_authenticated/_dashboard/dashboard",
      "children": [
        "/_authenticated/_dashboard/dashboard/_not-for-admin/polls",
        "/_authenticated/_dashboard/dashboard/_not-for-admin/tickets"
      ]
    },
    "/_authenticated/_dashboard/dashboard/": {
      "filePath": "_authenticated/_dashboard/dashboard/index.tsx",
      "parent": "/_authenticated/_dashboard/dashboard"
    },
    "/_authenticated/_dashboard/dashboard/_admin-only/manage-tickets": {
      "filePath": "_authenticated/_dashboard/dashboard/_admin-only/manage-tickets.tsx",
      "parent": "/_authenticated/_dashboard/dashboard/_admin-only"
    },
    "/_authenticated/_dashboard/dashboard/_admin-only/manage-users": {
      "filePath": "_authenticated/_dashboard/dashboard/_admin-only/manage-users.tsx",
      "parent": "/_authenticated/_dashboard/dashboard/_admin-only"
    },
    "/_authenticated/_dashboard/dashboard/_manager-only/manage-polls": {
      "filePath": "_authenticated/_dashboard/dashboard/_manager-only/manage-polls.tsx",
      "parent": "/_authenticated/_dashboard/dashboard/_manager-only"
    },
    "/_authenticated/_dashboard/dashboard/_not-for-admin/polls": {
      "filePath": "_authenticated/_dashboard/dashboard/_not-for-admin/polls.tsx",
      "parent": "/_authenticated/_dashboard/dashboard/_not-for-admin"
    },
    "/_authenticated/_dashboard/dashboard/_not-for-admin/tickets": {
      "filePath": "_authenticated/_dashboard/dashboard/_not-for-admin/tickets.tsx",
      "parent": "/_authenticated/_dashboard/dashboard/_not-for-admin"
    }
  }
}
ROUTE_MANIFEST_END */
